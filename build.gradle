// build requirements
buildscript {
    // build dependency repositories
    repositories {
        mavenCentral()
    }
    // build dependencies
    dependencies {
        classpath 'com.android.tools.build:gradle:0.14.+' // android build tools
    }
}

// build plugins
apply from: 'git.gradle'
apply plugin: 'com.android.application'

// application dependency repositories
repositories {
    maven { url 'http://mavenrepo.google-api-java-client.googlecode.com/hg' } // google-api
    mavenCentral()
}

// application dependencies
dependencies {
    // support library
    compile 'com.android.support:support-v4:21.0.+'

    // google books SDKs
    compile 'com.google.apis:google-api-services-books:v1-rev49-1.18.0-rc'
    compile 'com.google.http-client:google-http-client-jackson2:1.18.0-rc'

    // Debugging helper library
    compile 'com.jakewharton.timber:timber:2.4.1'
}

allprojects {
    afterEvaluate { project ->
        def propsFile = rootProject.file('signing.properties')
        def configName = 'release'

        if (propsFile.exists() && android.signingConfigs.hasProperty(configName)) {
            def props = new Properties()
            props.load(new FileInputStream(propsFile))
            android.signingConfigs[configName].storeFile = file(props['sign.keystore'])
            android.signingConfigs[configName].storePassword = props['sign.storepass']
            android.signingConfigs[configName].keyAlias = props['sign.alias']
            android.signingConfigs[configName].keyPassword = props['sign.keypass']
        }
    }
}

// android helpers
def getVersionCode = { ->
    return gitCommitCount()
}
def getVersionName = { ->
    def versionTag = gitTag() ?: ''

    if (gitCurrentBranch() != 'master' || versionTag.length() < 1) {
        return gitHash() + gitDirty()
    } else {
        return versionTag
    }
}

// android build settings
android {
    compileSdkVersion 19
    buildToolsVersion "21.1.1"

    defaultConfig {
        versionCode = getVersionCode()
        versionName = getVersionName()
        minSdkVersion 15
        targetSdkVersion 19
    }

    // singing
    signingConfigs {
        release {
            storeFile file("${project(':').projectDir}/release.properties")
            storePassword "IN_PROPERTIES_FILE"
            keyAlias "IN_PROPERTIES_FILE"
            keyPassword "IN_PROPERTIES_FILE"
        }
    }

    // build types
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            proguardFile 'proguard-rules.txt'
            applicationIdSuffix '.debug'
        }
        release {
            debuggable false
            minifyEnabled false
            proguardFile 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }
    }
}