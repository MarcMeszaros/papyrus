<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!-- This is a checkstyle configuration file. For descriptions of
what the following rules do, please see the checkstyle configuration
page at http://checkstyle.sourceforge.net/config.html -->
<module name="Checker">

  <!-- Include the supression file -->
  <module name="SuppressionFilter">
    <property name="file" value="checkstyle-suppressions.xml"/>
  </module>

  <!-- REGULAR EXPRESSIONS -->
  <module name="RegexpSingleline">
    <!-- detect trailing whitespace characters -->
    <property name="severity" value="warning"/>
    <property name="format" value="\s+$"/>
    <property name="message" value="There is a trailing whitespace at the end of a line."/>
  </module>
  
  <module name="RegexpMultiline">
    <!-- detect more than 3+ blank lines in a row -->
    <property name="severity" value="warning"/>
    <property name="format" value="([\s]*\n){4,}"/>
    <property name="message" value="There is more than one blank line after this one."/>
  </module>
  
  <module name="RegexpSingleline">
    <!-- only one whitespace between ')' and '{' -->
    <property name="severity" value="error"/>
    <property name="format" value="(.*\)\{.*)|(.*\)\s{2,}\{)"/>
    <property name="message" value="There needs to be only one whitespace character after ')' and '{'."/>
  </module>

  <!-- All Java AST specific tests live under TreeWalker module. -->
  <module name="TreeWalker">

	<!--IMPORT CHECKS -->
    <module name="RedundantImport">
      <!-- Checks for redundant import statements. -->
      <property name="severity" value="error"/>
    </module>

	<module name="UnusedImports">
      <!-- Checks for unused import statements. -->
      <property name="severity" value="warning"/>
    </module>

    <module name="ImportOrder">
      <!-- Checks for out of order import statements. -->
      <property name="severity" value="warning"/>
      <!-- This ensures that static imports go first. -->
      <property name="option" value="top"/>
      <property name="groups" value="/.*papyrus/,com.google,android,junit,net,org,java,javax"/>
      <property name="separated" value="true"/>
    </module>

	<!-- LENGTH and CODING CHECKS -->
    <module name="LineLength">
      <property name="severity" value="warning"/>
      <!-- Checks if a line is too long. -->
      <property name="max" value="120"/>
      <!--
        The default ignore pattern exempts the following elements:
          - import statements
          - long URLs inside comments
      -->
      <property name="ignorePattern" value="^(package .*;\s*)|(import .*;\s*)|( *\* *https?://.*)$"/>
    </module>
    
    <module name="LeftCurly">
      <!-- Checks for placement of the left curly brace ('{'). -->
      <property name="severity" value="error"/>
    </module>

    <module name="RightCurly">
      <!-- Checks right curlies on CATCH, ELSE, and TRY blocks are on
      the same line. e.g., the following example is fine:
      <pre>
        if {
          ...
        } else
      </pre>
      -->
      <!-- This next example is not fine:
      <pre>
        if {
          ...
        }
        else
      </pre>
      -->
      <property name="option" value="same"/>
      <property name="severity" value="error"/>
    </module>
    
    <!-- Checks for braces around if and else blocks -->
    <module name="NeedBraces">
      <property name="severity" value="error"/>
      <property name="tokens" value="LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO"/>
    </module>
    
    <!-- MODIFIERS CHECKS -->
    <module name="ModifierOrder">
      <!-- Warn if modifier order is inconsistent with JLS3 8.1.1, 8.3.1, and
           8.4.3.  The prescribed order is:
           public, protected, private, abstract, static, final, transient, volatile,
           synchronized, native, strictfp
        -->
    </module>
    
    <!-- WHITESPACE CHECKS -->  
    <module name="WhitespaceAround">
      <!-- Checks that various tokens are surrounded by whitespace.
           This includes most binary operators and keywords followed
           by regular or curly braces.
      -->
      <property name="tokens" value="ASSIGN, BAND, BAND_ASSIGN, BOR,
        BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN,
        EQUAL, GE, GT, LAND, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE,
        LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN,
        LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS,
        MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION,
        SL, SL_ASSIGN, SR_ASSIGN, STAR, STAR_ASSIGN"/>
      <property name="severity" value="error"/>
    </module>
    
    <module name="NoWhitespaceAfter">
      <!-- Checks that there is no whitespace after a token. -->
    </module>
    
    <module name="NoWhitespaceBefore">
      <!-- Checks that there is no whitespace before a token. -->
    </module>
    
    <module name="WhitespaceAfter">
      <!-- Checks that commas, semicolons and typecasts are followed by
           whitespace.
      -->
      <property name="tokens" value="COMMA, SEMI, TYPECAST"/>
    </module>
    
    <module name="ParenPad">
      <!-- Checks that there is no whitespace before close parens or after
           open parens.
      -->
      <property name="severity" value="warning"/>
    </module>
    
    <!-- JAVADOC CHECKS -->
    <module name="JavadocMethod"/>

  </module>
</module>